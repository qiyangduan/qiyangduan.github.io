(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{429:function(t,e,a){"use strict";a.r(e);var s=a(15),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("This is a real time field service dispatching planner. It automatically dispatch jobs to different workers under business restrictions like working hour, skills, etc.")]),t._v(" "),a("p",[t._v("Some of the feature highlights:")]),t._v(" "),a("ul",[a("li",[t._v("Real Time Dispatching based on three types of Dispatching Algorithms: Heuristic, Optimization, Reinforcement Learning")]),t._v(" "),a("li",[t._v("Vehicle Routing Problem capability embedded")]),t._v(" "),a("li",[t._v("Flexible Business Rule Plugins, specifies what solution is allowed but not how to reach a solution")]),t._v(" "),a("li",[t._v("Explainable AI to do drag and drop what-if analysis.")]),t._v(" "),a("li",[t._v("Full set of REST API and API Documents")])]),t._v(" "),a("h2",{attrs:{id:"online-demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#online-demo"}},[t._v("#")]),t._v(" Online Demo")]),t._v(" "),a("p",[t._v("We are working on demo.")]),t._v(" "),a("h2",{attrs:{id:"problem-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problem-definition"}},[t._v("#")]),t._v(" Problem Definition")]),t._v(" "),a("h2",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[t._v("#")]),t._v(" Quick Start")]),t._v(" "),a("p",[t._v("EasyDispatch relies on Postgres DB, Redis and Kafka. Those three components can be started by "),a("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("compose"),a("OutboundLink")],1),t._v(" or provisioned seperately. You also should have "),a("a",{attrs:{href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm and node"),a("OutboundLink")],1),t._v(" for frontend development.")]),t._v(" "),a("ol",[a("li",[t._v("To run easydispatch locally, first install it by:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/alibaba/easydispatch.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" easydispatch\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Then copy and modify env file from $easydisaptch/etc/dev_env_sample to $easydisaptch/dev.env  . Start the database, redis and kafka by docker composer.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker-compose -f kafka-redis-postgres-compose.yml -p easy up\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Open another terminal, populate some sample data and run the frontend:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("python -m dispatch.cli database init\npython -m dispatch.cli server start --port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(" dispatch.main:app \n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Visit the page at : http://localhost:8000/login")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/planner_gantt_20210504215543.jpg",alt:"planner_ui"}})]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("Those scripts can be used for testing purpose:")]),t._v(" "),a("ul",[a("li",[t._v("clear off all existing workers and jobs")]),t._v(" "),a("li",[t._v("generate sample data for a period")]),t._v(" "),a("li",[t._v("use batch optimizer to dispatch all jobs in the planning window")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EASHDISPATCH_HOME")]),t._v("\npython  tests/kandbox_clear_data.py \npython -m dispatch.cli util generate --dataset veo --team_code london_t1 --start_day "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20210503")]),t._v(" --end_day "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20210505")]),t._v(" --username demo --password demo\npython -m dispatch.cli job dispatch  --team_code london_t1  --start_day "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20210503")]),t._v(" --dispatch_days "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"os-and-environements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os-and-environements"}},[t._v("#")]),t._v(" OS and Environements")]),t._v(" "),a("p",[t._v("We tested it on Ubuntu 20.04 and MacOS, Python 3.7 / 3.8")]),t._v(" "),a("h1",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),a("p",[t._v("The frontend and server technology stack (vue + python) were adapted from "),a("a",{attrs:{href:"https://github.com/Netflix/dispatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("Netflix Dispatch"),a("OutboundLink")],1),t._v(". Data structures are not compatible.")])])}),[],!1,null,null,null);e.default=n.exports}}]);