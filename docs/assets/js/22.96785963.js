(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{423:function(a,t,s){"use strict";s.r(t);var e=s(15),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[a._v("#")]),a._v(" Installation")]),a._v(" "),s("h2",{attrs:{id:"prerequisite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisite"}},[a._v("#")]),a._v(" Prerequisite")]),a._v(" "),s("ul",[s("li",[a._v("Ubuntu >=20.04 and MacOS")]),a._v(" "),s("li",[a._v("Python 3.7 / 3.8 / 3.9")]),a._v(" "),s("li",[a._v("node/npm")])]),a._v(" "),s("h2",{attrs:{id:"quick-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[a._v("#")]),a._v(" Quick Start")]),a._v(" "),s("p",[a._v("EasyDispatch relies on Postgres DB, Redis and Kafka. Those three components can be started by "),s("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[a._v("docker"),s("OutboundLink")],1),a._v(" and "),s("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("compose"),s("OutboundLink")],1),a._v(" or provisioned seperately. You also should have "),s("a",{attrs:{href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm and node"),s("OutboundLink")],1),a._v(" for frontend development.")]),a._v(" "),s("ol",[s("li",[a._v("To run easydispatch locally, first install it by:")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/alibaba/easydispatch.git "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" easydispatch\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("Then copy and modify env file from $easydisaptch/etc/dev_env_sample to $easydisaptch/dev.env  . Start the database, redis and kafka by docker composer.")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker-compose -f kafka-redis-postgres-compose.yml -p easy up\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("Open another terminal, populate some sample data and run the frontend:")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("python -m dispatch.cli database init\npython -m dispatch.cli server start --port "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(" dispatch.main:app \n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("Visit the page at : http://localhost:8000/login")])]),a._v(" "),s("p",[s("img",{attrs:{src:"/login_page_20210608174032.jpg",alt:"login_page"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);