(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{461:function(a,t,s){"use strict";s.r(t);var e=s(15),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"如何快速开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何快速开始"}},[a._v("#")]),a._v(" 如何快速开始")]),a._v(" "),s("p",[a._v("EasyDispatch 依赖于这些部件： Postgres DB, Redis 和 Kafka. 对于开发者和小规模用户，一般建议用"),s("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[a._v("docker"),s("OutboundLink")],1),a._v(" 和 "),s("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("compose"),s("OutboundLink")],1),a._v(" 跑起来。")]),a._v(" "),s("p",[a._v("本地安装过程中同时需要 "),s("a",{attrs:{href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm and node"),s("OutboundLink")],1),a._v("。 我们测试过的环境是 Ubuntu Linux 2004和 Macos。")]),a._v(" "),s("ol",[s("li",[a._v("克隆代码库后，到src目录执行下面命令，可以启动服务:")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/alibaba/easydispatch.git "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" easydispatch\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("从 $easydisaptch/etc/dev_env_sample 复制并修改环境文件，放到  $easydisaptch/dev.env 。然后启动postgresql, redis 和 kafka。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker-compose -f kafka-redis-postgres-compose.yml -p easy up\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("(可选) 可以执行伦敦的样例数据导入和排班作为单元测试。打开另外一个窗口，执行：")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("python -m dispatch.cli database init\npython -m dispatch.cli server start --port "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(" dispatch.main:app \n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("从浏览器打开: http://localhost:8000/login。应该能看到登录页面，如果不能，就到"),s("a",{attrs:{href:"https://github.com/alibaba/easydispatch/issues",target:"_blank",rel:"noopener noreferrer"}},[a._v("主库"),s("OutboundLink")],1),a._v(" 就给我们提issue吧。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"/login_page_20210608174032.jpg",alt:"planner_ui"}})]),a._v(" "),s("h2",{attrs:{id:"在线演示环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在线演示环境"}},[a._v("#")]),a._v(" 在线演示环境")]),a._v(" "),s("p",[a._v("我们正在制作一个在线demo系统里面用伦敦的样例数据做排班和展示。")]),a._v(" "),s("ul",[s("li",[a._v("地址: "),s("a",{attrs:{href:"https://planner.kandbox.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://planner.kandbox.com"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("用户名: ...")]),a._v(" "),s("li",[a._v("密码: ...")])])])}),[],!1,null,null,null);t.default=r.exports}}]);